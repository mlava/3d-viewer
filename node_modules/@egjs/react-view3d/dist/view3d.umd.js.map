{"version":3,"file":"view3d.umd.js","sources":["../src/View3D.tsx","../src/index.umd.ts"],"sourcesContent":["/*\n * Copyright (c) 2020 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport * as React from \"react\";\nimport VanillaView3D, {\n  View3DOptions,\n  withMethods,\n  EVENTS,\n  DEFAULT_CLASS\n} from \"@egjs/view3d\";\n\nimport { View3DProps } from \"./types\";\n\ntype View3DPropsAndOptions = Partial<View3DProps & View3DOptions>;\n\nconst view3DSetterNames = Object.getOwnPropertyNames(VanillaView3D.prototype)\n  .filter(name => {\n    const descriptor = Object.getOwnPropertyDescriptor(VanillaView3D.prototype, name);\n\n    if (name.startsWith(\"_\")) return false;\n    if (descriptor?.value) return false;\n\n    return !!descriptor!.set;\n  });\n\nclass View3D extends React.PureComponent<View3DPropsAndOptions> {\n  public static defaultProps: Partial<View3DProps> = {\n    tag: \"div\"\n  };\n\n  private _vanillaView3D: VanillaView3D;\n  private _containerEl: HTMLElement;\n\n  public get view3D() { return this._vanillaView3D; }\n  public get element() { return this._containerEl; }\n\n  public constructor(props: View3DPropsAndOptions) {\n    super(props);\n\n    withMethods(this, \"_vanillaView3D\");\n  }\n\n  public componentDidMount() {\n    this._vanillaView3D = new VanillaView3D(\n      this._containerEl,\n      this.props\n    );\n\n    this._bindEvents();\n  }\n\n  public componentWillUnmount() {\n    this._vanillaView3D.destroy();\n  }\n\n  public componentDidUpdate(prevProps) {\n    const view3D = this._vanillaView3D;\n\n    view3DSetterNames.forEach(name => {\n      const oldProp = prevProps[name];\n      const newProp = this.props[name];\n\n      if (newProp !== oldProp) {\n        view3D[name] = newProp;\n      }\n    });\n  }\n\n  public render() {\n    const {\n      tag,\n      className = \"\",\n      canvasClass = \"\",\n      ...restProps\n    } = this.props;\n    const Container = tag as any;\n\n    const wrapperClassName = `${DEFAULT_CLASS.WRAPPER} ${className}`.trim();\n    const canvasClassName = `${DEFAULT_CLASS.CANVAS} ${canvasClass}`.trim();\n\n    const attributes: { [key: string]: any } = {};\n\n    for (const name in restProps) {\n      if (!(name.startsWith(\"on\")) && !(name in VanillaView3D.prototype)) {\n        attributes[name] = restProps[name];\n      }\n    }\n\n    return <Container {...attributes} className={wrapperClassName} ref={(e?: HTMLElement) => {\n      e && (this._containerEl = e);\n    }}>\n      <canvas className={canvasClassName} />\n      { this.props.children }\n    </Container>;\n  }\n\n  private _bindEvents() {\n    const view3D = this._vanillaView3D;\n\n    Object.keys(EVENTS).forEach((eventKey: keyof typeof EVENTS) => {\n      const eventName = EVENTS[eventKey];\n      const propName = `on${eventName.charAt(0).toUpperCase() + eventName.slice(1)}`;\n\n      view3D.on(eventName, e => {\n        e.target = this;\n\n        const evtHandler = this.props[propName];\n        if (evtHandler) {\n          evtHandler(e);\n        }\n      });\n    });\n  }\n}\n\ninterface View3D extends React.Component<View3DPropsAndOptions>, VanillaView3D {}\nexport default View3D;\n","/*\n * Copyright (c) 2020 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport View3D from \"./View3D\";\n\nexport default View3D;\n"],"names":["view3DSetterNames","Object","getOwnPropertyNames","VanillaView3D","prototype","filter","name","descriptor","getOwnPropertyDescriptor","startsWith","value","set","View3D","_super","__extends","props","_this","call","withMethods","defineProperty","get","_vanillaView3D","_containerEl","componentDidMount","_bindEvents","componentWillUnmount","destroy","componentDidUpdate","prevProps","view3D","forEach","oldProp","newProp","render","_a","tag","_b","className","_c","canvasClass","restProps","__rest","Container","wrapperClassName","concat","DEFAULT_CLASS","WRAPPER","trim","canvasClassName","CANVAS","attributes","React","createElement","__assign","ref","e","children","keys","EVENTS","eventKey","eventName","propName","charAt","toUpperCase","slice","on","target","evtHandler","defaultProps","PureComponent"],"mappings":"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"}